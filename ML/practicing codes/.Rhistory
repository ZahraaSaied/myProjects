setwd("E:/@current work/Machine_Learning_A-Z_Hands-On_Python_and_R_In_Data_Science/my practice")
dataset = read.csv("Data.csv")
View(dataset)
View(dataset)
dataset$Age = ifelse(is.na(dataset$Aga),
ave(dataset$Age, FUN = function(x) mean(x, na.rm =TRUE)),
dataset$Age)
dataset$Age = ifelse(is.na(dataset$Aga),
ave(dataset$Age, FUN = function(x) mean(x, na.rm =TRUE)),
dataset$Age)
dataset$Age = ifelse(is.na(dataset$Age),
ave(dataset$Age, FUN = function(x) mean(x, na.rm = TRUE)),
dataset$Age)
dataset$Salary = ifelse(is.na(dataset$Salary),
ave(dataset$Salary, FUN = function(x) mean(x, na.rm =TRUE)),
dataset$Salary)
clear
View(dataset)
dataset$Country = factor(dataset$Country,
levels = c('France', 'Spain', 'Germany'),
labels = c(1, 2, 3))
dataset$Purchased = factor(dataset$Purchased,
levels = c('No', 'Yes'),
labels = c(0, 1))
library("caTools", lib.loc="C:/Program Files/R/R-3.5.0/library")
detach("package:caTools", unload=TRUE)
install.packages("caTools")
install.packages("caTools")
liberary('caTools')
liberary(caTools)
#spliting the dataset into test_set and trainig_test
library(caTools)
#spliting the dataset into test_set and trainig_test
install.packages("caTools")
install.packages("caTools")
library(caTools)
install.packages("caTools")
library(caTools)
split = sample.split(dataset, SplitRatio = 0.8)
split
split = sample.split(dataset$Purchased, SplitRatio = 0.8)
split
set.seed(123)
split = sample.split(dataset$Purchased, SplitRatio = 0.8)
split
training_set = subset(dataset, split == TRUE)
set.seed(123)
split = sample.split(dataset$Purchased, SplitRatio = 0.8)
training_set = subset(dataset, split == TRUE)
test_set = subset(dataset, split == FALSE)
View(training_set)
View(test_set)
View(training_set)
View(training_set)
View(test_set)
training_set = scale(training_set)
test_set = scale(test_set)
training_set[,2:3] = scale(training_set[,2:3])
test_set[,2:3] = scale(test_set[,2:3])
View(training_set)
View(test_set)
dataset = read.csv("Data.csv")
View(dataset)
split = sample.split(dataset$Purchased, SplitRatio = 0.8)
set.seed(123)
split = sample.split(dataset$Purchased, SplitRatio = 0.8)
training_set = subset(dataset, split == TRUE)
test_set = subset(dataset, split == FALSE)
View(training_set)
View(test_set)
library("caTools", lib.loc="C:/Program Files/R/R-3.5.0/library")
dataset
View(test_set)
dataset = read.csv("Salary_Data.csv")
split = sample.split(dataset, SplitRatio = 2/3)
split = sample.split(dataset$Salary, SplitRatio = 2/3)
View(dataset)
split = sample.split(dataset$Salary, SplitRatio = 2/3)
trainig_set = subset(dataset, split == TRUE)
test_set = subset(dataset, split == FALSE)
regressor = lm(formula = Salary ~ YearsExperience,
data = trainig_set)
summary(regressor)
y_pred = predict(regressor, newdata = test_set)
y_pred
View(test_set)
View(test_set)
library(ggplot2)
View(trainig_set)
dataset = read.csv("Salary_Data.csv")
#library(caTools)
set.seed(123)
split = sample.split(dataset$Salary, SplitRatio = 2/3)
training_set = subset(dataset, split == TRUE)
test_set = subset(dataset, split == FALSE)
regressor = lm(formula = Salary ~ YearsExperience,
data = training_set)
y_pred = predict(regressor, newdata = test_set)
library(ggplot2)
ggplot()+
geom_point(aes(x = training_set$YearsExperience, y = training_set$Salary),
colour = 'red')+
geom_line(aes(x = training_set$YearsExperience, y = predict(regressor, newdata = training_set)),
colour = 'blue')+
ggtitle("Salary vs Experience (Training set)")+
xlab("Experience")+
ylab("Salary")
ggplot()+
geom_point(aes(x = training_set$YearsExperience, y = training_set$Salary),
colour = 'red')+
geom_line((aes(x = training_set$YearsExperience, y = predict(regressor, newdata = training_set)),
colour = 'blue'))+
ggtitle("Salary vs Experience (Test Set)")+
xlab("Experience")+
ylab("Salary")
ggplot()+
geom_point(aes(x = training_set$YearsExperience, y = training_set$Salary),
colour = 'red')+
geom_line((aes(x = training_set$YearsExperience, y = predict(regressor, newdata = training_set)),
colour = 'blue'))+
ggtitle("Salary vs Experience (Test Set)")+
xlab("Experience")+
ylab("Salary")
ggplot()+
geom_point(aes(x = training_set$YearsExperience, y = training_set$Salary),
colour = 'red')+
geom_line((aes(x = training_set$YearsExperience, y = predict(regressor, newdata = training_set)),
colour = 'blue'))+
ggtitle("Salary vs Experience (Test Set)")+
xlab("Experience")+
ylab("Salary")
ggplot()+
geom_point(aes(x = test_set$YearsExperience, y = test_set$Salary),
colour = 'red')+
geom_line((aes(x = training_set$YearsExperience, y = predict(regressor, newdata = training_set)),
colour = 'blue'))+
ggtitle("Salary vs Experience (Test Set)")+
xlab("Experience")+
ylab("Salary")
library(ggplot2)
ggplot()+
geom_point(aes(x = training_set$YearsExperience, y = training_set$Salary),
colour = 'red')+
geom_line(aes(x = training_set$YearsExperience, y = predict(regressor, newdata = training_set)),
colour = 'blue')+
ggtitle("Salary vs Experience (Training set)")+
xlab("Experience")+
ylab("Salary")
ggplot()+
geom_point(aes(x = test_set$YearsExperience, y = test_set$Salary),
colour = 'red')+
geom_line(aes(x = training_set$YearsExperience, y = predict(regressor, newdata = training_set)),
colour = 'blue')+
ggtitle("Salary vs Experience (Training set)")+
xlab("Experience")+
ylab("Salary")
