setwd("/media/zahraa/venus/@current work/Machine_Learning_A-Z_Hands-On_Python_and_R_In_Data_Science/my practice/linear regression")
dataset = read.csv("Position_Salaries.cvs")
dataset = read.csv("Position_Salaries.csv")
dataset = dataset[2:3]
View(dataset)
View(dataset)
lin_reg = lm(formula = Salary ~ Level,
data = dataset)
library("caTools", lib.loc="~/R/x86_64-pc-linux-gnu-library/3.2")
library("ggplot2", lib.loc="~/R/x86_64-pc-linux-gnu-library/3.2")
ggplot()+
geom_point(aes(x = dataset$Level, y = dataset$Salary),
colour = "red")+
geom_line(aes(x = dataset$Level, y = predict(lin_reg, newdata = dataset$Level)),
colour = "red")+
ggtitle("Linear model")+
xlab("Levels")+
ylab("Salary")
ggplot()+
geom_point(aes(x = dataset$Level, y = dataset$Salary),
colour = "red")+
geom_line(aes(x = dataset$Level, y = predict(lin_reg, newdata = dataset)),
colour = "red")+
ggtitle("Linear model")+
xlab("Levels")+
ylab("Salary")
lin_reg = lm(formula = Salary ~ .,
data = dataset)
dataset$Level2 = dataset$Level^2
dataset$Level3 = dataset$Level^3
poly_reg = lm(formula = Salary ~ .,
data = dataset)
ggplot()+
geom_point(aes(x = dataset$Level, y = dataset$Salary),
colour = "red")+
geom_line(aes(x = dataset$Level, y = predict(poly_reg, newdata = dataset)),
colour = "blue")+
ggtitle("Linear model")+
xlab("Levels")+
ylab("Salary")
dataset$Level2 = dataset$Level^2
dataset$Level3 = dataset$Level^3
dataset$Level4 = dataset$Level^4
poly_reg = lm(formula = Salary ~ .,
data = dataset)
ggplot()+
geom_point(aes(x = dataset$Level, y = dataset$Salary),
colour = "red")+
geom_line(aes(x = dataset$Level, y = predict(poly_reg, newdata = dataset)),
colour = "blue")+
ggtitle("Linear model")+
xlab("Levels")+
ylab("Salary")
predict(lin_reg, newdata = 6.5)
y_pred = predict(lin_reg, data.frame(level = 6.5))
y_pred = predict(lin_reg, data.frame(Level = 6.5))
y_pred2 = predict(poly_reg, data.frame(Level = 6.5))
y_pred2 = predict(poly_reg, data.frame(Level = 6.5, Level2 = 6.5^2, Level3 = 6.5^3, Level4 = 6.5^4))
setwd("/media/zahraa/venus/@current work/Machine_Learning_A-Z_Hands-On_Python_and_R_In_Data_Science/my practice/regression/SVR")
dataset = read.csv("Position_Salaries.csv")
dataset = dataset[1:2]
View(dataset)
dataset = read.csv("Position_Salaries.csv")
dataset = dataset[2:3]
View(dataset)
View(dataset)
install.packages("e1071")
library('e1071')
regressor = svm(formula = Salary ~ .,
data = dataset,
type = "eps-regression",
kernel = "radial")
y_pred = predict(regressor, data.frame(Level = 6.5))
# install.packages('ggplot2')
library(ggplot2)
ggplot() +
geom_point(aes(x = dataset$Level, y = dataset$Salary),
colour = 'red') +
geom_line(aes(x = dataset$Level, y = predict(regressor, newdata = dataset)),
colour = 'blue') +
ggtitle('Truth or Bluff (Regression Model)') +
xlab('Level') +
ylab('Salary')
library(ggplot2)
x_grid = seq(min(dataset$Level), max(dataset$Level), 0.1)
ggplot() +
geom_point(aes(x = dataset$Level, y = dataset$Salary),
colour = 'red') +
geom_line(aes(x = x_grid, y = predict(regressor, newdata = data.frame(Level = x_grid))),
colour = 'blue') +
ggtitle('Truth or Bluff (SVR Model)') +
xlab('Level') +
ylab('Salary')
regressor = svm(formula = Salary ~ .,
data = dataset,
type = "eps-regression",
kernel = "sigmoid")
y_pred = predict(regressor, data.frame(Level = 6.5))
library(ggplot2)
ggplot() +
geom_point(aes(x = dataset$Level, y = dataset$Salary),
colour = 'red') +
geom_line(aes(x = dataset$Level, y = predict(regressor, newdata = dataset)),
colour = 'blue') +
ggtitle('Truth or Bluff (SVR Model)') +
xlab('Level') +
ylab('Salary')
regressor = svm(formula = Salary ~ .,
data = dataset,
type = "eps-regression",
kernel = "polynomial")
y_pred = predict(regressor, data.frame(Level = 6.5))
library(ggplot2)
ggplot() +
geom_point(aes(x = dataset$Level, y = dataset$Salary),
colour = 'red') +
geom_line(aes(x = dataset$Level, y = predict(regressor, newdata = dataset)),
colour = 'blue') +
ggtitle('Truth or Bluff (SVR Model)') +
xlab('Level') +
ylab('Salary')
regressor = svm(formula = Salary ~ .,
data = dataset,
type = "eps-regression",
kernel = "radial")
y_pred = predict(regressor, data.frame(Level = 6.5))
library(ggplot2)
ggplot() +
geom_point(aes(x = dataset$Level, y = dataset$Salary),
colour = 'red') +
geom_line(aes(x = dataset$Level, y = predict(regressor, newdata = dataset)),
colour = 'blue') +
ggtitle('Truth or Bluff (SVR Model)') +
xlab('Level') +
ylab('Salary')
install.packages('rpart')
library('rpart')
dataset = read.csv('Position_Salaries.csv')
dataset = dataset[2:3]
setwd("/media/zahraa/venus/@current work/Machine_Learning_A-Z_Hands-On_Python_and_R_In_Data_Science/my practice/regression/tree")
dataset = read.csv('Position_Salaries.csv')
dataset = dataset[2:3]
library('rpart')
regressor = rpart(formula = Salary ~ .,
data = dataset)
y_pred = predict(regressor, data.frame(Level = 6.5))
x_grid = seq(min(dataset$Level), max(dataset$Level), 0.01)
ggplot()+
geom_point(aes(x = x_grid, y = predict(regressor, data.frame(x_grid))),
colour = "red")+
geom_line(aes(x = dataset$Level, y = dataset$Salary),
colour = "red")+
ggtitle('Truth or Bluff (Decision Tree Model)')+
xlab('Level')+
ylab('Salary')
View(dataset)
View(dataset)
x_grid = seq(min(dataset$Level), max(dataset$Level), 0.01)
ggplot()+
geom_point(aes(x = x_grid, y = dataset$Salary),
colour = "red")+
geom_line(aes(x = x_grid, y = predict(regressor, data.frame(x_grid))),
colour = "red")+
ggtitle('Truth or Bluff (Decision Tree Model)')+
xlab('Level')+
ylab('Salary')
x_grid = seq(min(dataset$Level), max(dataset$Level), 0.01)
ggplot()+
geom_point(aes(x = x_grid, y = dataset$Salary),
colour = "red")+
geom_line(aes(x = x_grid, y = predict(regressor, newdata = data.frame(Level = x_grid))),
colour = "blue")+
ggtitle('Truth or Bluff (Decision Tree Model)')+
xlab('Level')+
ylab('Salary')
x_grid = seq(min(dataset$Level), max(dataset$Level), 0.01)
ggplot()+
geom_point(aes(x = dataset$Level, y = dataset$Salary),
colour = "red")+
geom_line(aes(x = x_grid, y = predict(regressor, newdata = data.frame(Level = x_grid))),
colour = "blue")+
ggtitle('Truth or Bluff (Decision Tree Model)')+
xlab('Level')+
ylab('Salary')
x_grid
length(x_grid)
regressor = rpart(formula = Salary ~ .,
data = dataset,
control = rpart.control(minsplit = 1))
y_pred = predict(regressor, data.frame(Level = 6.5))
x_grid = seq(min(dataset$Level), max(dataset$Level), 0.01)
ggplot()+
geom_point(aes(x = dataset$Level, y = dataset$Salary),
colour = "red")+
geom_line(aes(x = x_grid, y = predict(regressor, newdata = data.frame(Level = x_grid))),
colour = "blue")+
ggtitle('Truth or Bluff (Decision Tree Model)')+
xlab('Level')+
ylab('Salary')
regressor = rpart(formula = Salary ~ .,
data = dataset,
control = rpart.control(minsplit = 6))
y_pred = predict(regressor, data.frame(Level = 6.5))
x_grid = seq(min(dataset$Level), max(dataset$Level), 0.01)
ggplot()+
geom_point(aes(x = dataset$Level, y = dataset$Salary),
colour = "red")+
geom_line(aes(x = x_grid, y = predict(regressor, newdata = data.frame(Level = x_grid))),
colour = "blue")+
ggtitle('Truth or Bluff (Decision Tree Model)')+
xlab('Level')+
ylab('Salary')
regressor = rpart(formula = Salary ~ .,
data = dataset,
control = rpart.control(minsplit = 10))
x_grid = seq(min(dataset$Level), max(dataset$Level), 0.01)
ggplot()+
geom_point(aes(x = dataset$Level, y = dataset$Salary),
colour = "red")+
geom_line(aes(x = x_grid, y = predict(regressor, newdata = data.frame(Level = x_grid))),
colour = "blue")+
ggtitle('Truth or Bluff (Decision Tree Model)')+
xlab('Level')+
ylab('Salary')
library('rpart')
regressor = rpart(formula = Salary ~ .,
data = dataset,
control = rpart.control(minsplit = 1))
x_grid = seq(min(dataset$Level), max(dataset$Level), 0.01)
ggplot()+
geom_point(aes(x = dataset$Level, y = dataset$Salary),
colour = "red")+
geom_line(aes(x = x_grid, y = predict(regressor, newdata = data.frame(Level = x_grid))),
colour = "blue")+
ggtitle('Truth or Bluff (Decision Tree Model)')+
xlab('Level')+
ylab('Salary')
setwd("/media/zahraa/venus/@current work/Machine_Learning_A-Z_Hands-On_Python_and_R_In_Data_Science/my practice/regression/random forest")
setwd("/media/zahraa/venus/@current work/Machine_Learning_A-Z_Hands-On_Python_and_R_In_Data_Science/my practice/regression/random forest")
install.packages("randomForest")
library('randomForest')
dataset = read.csv('Position_Salaries.csv')
dataset = dataset[2:3]
regressor = randomForest(x = dataset[1],
y = dataset$Salary,
ntree = 10)
library(ggplot2)
x_grid = seq(min(dataset$Level), max(dataset$Level), 0.1)
ggplot() +
geom_point(aes(x = dataset$Level, y = dataset$Salary),
colour = 'red') +
geom_line(aes(x = x_grid, y = predict(regressor, newdata = data.frame(Level = x_grid))),
colour = 'blue') +
ggtitle('Truth or Bluff (Random Forest Model)') +
xlab('Level') +
ylab('Salary')
y_pred = predict(regressor, data.frame(Level = 6.5))
regressor = randomForest(x = dataset[1],
y = dataset$Salary,
ntree = 100)
y_pred = predict(regressor, data.frame(Level = 6.5))
regressor = randomForest(x = dataset[1],
y = dataset$Salary,
ntree = 300)
y_pred = predict(regressor, data.frame(Level = 6.5))
regressor = randomForest(x = dataset[1],
y = dataset$Salary,
ntree = 500)
y_pred = predict(regressor, data.frame(Level = 6.5))
y_pred = predict(regressor, data.frame(Level = 6.5))
set.seed(1234)
regressor = randomForest(x = dataset[1],
y = dataset$Salary,
ntree = 500
y_pred = predict(regressor, data.frame(Level = 6.5))
set.seed(1234)
regressor = randomForest(x = dataset[1],
y = dataset$Salary,
ntree = 300)
y_pred = predict(regressor, data.frame(Level = 6.5))
set.seed(1234)
regressor = randomForest(x = dataset[1],
y = dataset$Salary,
ntree = 500)
y_pred = predict(regressor, data.frame(Level = 6.5))
library(ggplot2)
x_grid = seq(min(dataset$Level), max(dataset$Level), 0.1)
ggplot() +
geom_point(aes(x = dataset$Level, y = dataset$Salary),
colour = 'red') +
geom_line(aes(x = x_grid, y = predict(regressor, newdata = data.frame(Level = x_grid))),
colour = 'blue') +
ggtitle('Truth or Bluff (Random Forest Model)') +
xlab('Level') +
ylab('Salary')
regressor = randomForest(x = dataset[1],
y = dataset$Salary,
ntree = 1000)
y_pred = predict(regressor, data.frame(Level = 6.5))
# install.packages('ggplot2')
library(ggplot2)
x_grid = seq(min(dataset$Level), max(dataset$Level), 0.1)
ggplot() +
geom_point(aes(x = dataset$Level, y = dataset$Salary),
colour = 'red') +
geom_line(aes(x = x_grid, y = predict(regressor, newdata = data.frame(Level = x_grid))),
colour = 'blue') +
ggtitle('Truth or Bluff (Random Forest Model)') +
xlab('Level') +
ylab('Salary')
regressor = randomForest(x = dataset[1],
y = dataset$Salary,
ntree = 10000)
y_pred = predict(regressor, data.frame(Level = 6.5))
library(ggplot2)
x_grid = seq(min(dataset$Level), max(dataset$Level), 0.1)
ggplot() +
geom_point(aes(x = dataset$Level, y = dataset$Salary),
colour = 'red') +
geom_line(aes(x = x_grid, y = predict(regressor, newdata = data.frame(Level = x_grid))),
colour = 'blue') +
ggtitle('Truth or Bluff (Random Forest Model)') +
xlab('Level') +
ylab('Salary')
regressor = randomForest(x = dataset[1],
y = dataset$Salary,
ntree = 100)
y_pred = predict(regressor, data.frame(Level = 6.5))
library(ggplot2)
x_grid = seq(min(dataset$Level), max(dataset$Level), 0.1)
ggplot() +
geom_point(aes(x = dataset$Level, y = dataset$Salary),
colour = 'red') +
geom_line(aes(x = x_grid, y = predict(regressor, newdata = data.frame(Level = x_grid))),
colour = 'blue') +
ggtitle('Truth or Bluff (Random Forest Model)') +
xlab('Level') +
ylab('Salary')
set.seed(1234)
regressor = randomForest(x = dataset[1],
y = dataset$Salary,
ntree = 500)
y_pred = predict(regressor, data.frame(Level = 6.5))
